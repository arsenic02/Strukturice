//1. zadatak
int LList::MoveHigher(int value)
{
	LListNode* tmp = head->next;//ne mora da krece od head, moze da krece posle head-a jer je on svakako na pocetku liste
	LListNode* prev = head;
	
	while (tmp != nullptr)
	{
			if (tmp->info > value)
			{
				prev->next = tmp->next;
				tmp->next = head;
				head = tmp;
				tmp = prev->next;
			}
			else
			{
				prev = prev->next;
				tmp = tmp->next;
			}
	}
	return 0;
}
//3.zad mozda je trebalo da se napise samo 1 rekurzivna fja kako i pise  u zadatku
int BSTreeInt::countCloseSiblings(BSTNodeInt* root)//okt 2022
{
	int counter = 0;
	return countCloseSiblings(root, &counter);
}
int BSTreeInt::countCloseSiblings(BSTNodeInt* root,int*counter)
{
	if (root == nullptr)
		return 0;
	if (root->left!=nullptr && abs(root->key - root->left->key) == 1)//(root-root->left)==1
		(* counter)++;
	if (root->right!=nullptr && abs(root->key - root->right->key) == 1)//(root->right-root)==1
		(*counter)++;
	 countCloseSiblings(root->left, counter);
	 countCloseSiblings(root->right, counter);
	 return *counter;
}
